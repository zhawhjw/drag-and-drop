{"version":3,"sources":["VideoComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Video","url","this","props","className","src","type","playing","width","height","controls","loop","Component","removePeople","new_marked","prev","array","index","indexOf","splice","AppDragDropDemo","state","horizontal_factor","NaN","vertical_factor","frame_factor","frame_min","current","current_tasks","id","name","category","pre","bgcolor","current_slider","value","current_marked","motion_dict","tasks","slider_tasks","marked","handleCheck","e","i","new_item","hasOwnProperty","setState","onClick","onChange","new_value","forceNumber","target","new_current_slider","filter","slider_task","onDragStart","ev","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","new_state","task","some","data_array","ExtractData","map","val","hmax","vmax","fmax","fmin","Number","MAX_SAFE_INTEGER","forEach","row","Horizontals","Verticals","Frames","video","label","attcktype","distance","frame","grids","t","push","draggable","style","backgroundColor","length","lhmax","lhmin","lvmax","lvmin","lfmax","lfmin","Attacks","item","min","max","step","hold","console","log","normalized_h","normalized_v","normalized_f","Name","hscore","vscore","fscore","tscore","distance_input","height_input","frame_input","sort","a","b","Math","abs","swipeable","showDots","responsive","desktop","breakpoint","items","slidesToSlide","tablet","mobile","ssr","infinite","autoPlay","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","deviceType","dotListClass","itemClass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacc9bcb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactPlayer from 'react-player'\n\nclass Video extends Component {\n    render () {\n\n        const {url} = this.props;\n\n        return (\n            <div className='player-wrapper'>\n                <ReactPlayer\n                    className='react-player fixed-bottom'\n                    url= {[{src:\"Captures/\" + url + \"_0.mp4\", type: 'video/mp4'}] }\n                    // url = 'Captures/test.mp4'\n                    playing={true}\n                    width='50%'\n                    height='50%'\n                    controls = {true}\n                    loop = {true}\n\n                />\n            </div>\n        )\n    }\n}\n\nexport default Video;","import React, { Component } from 'react';\nimport {RangeStepInput} from 'react-range-step-input'\nimport {forceNumber} from \"react-range-step-input/lib/utils\";\nimport Carousel from 'react-multi-carousel';\nimport ExtractData from \"./data/extracted.json\"\nimport { SliderComponent } from '@syncfusion/ej2-react-inputs';\n// import data from \"./data/Animation Statistic.json\"\n\nimport Video from './VideoComponent'\nimport './App.css';\nimport 'react-multi-carousel/lib/styles.css';\n\n\n// function mapData(){\n//   return data.map((val, i) => val);\n// }\n\n\nfunction readJSON(){\n  return ExtractData.map((val, i) => val);\n}\n\nfunction removePeople(new_marked, prev) {\n  let array = [...new_marked]; // make a separate copy of the array\n  let index = array.indexOf(prev  )\n  if (index !== -1) {\n    array.splice(index, 1);\n\n  }\n  return array;\n}\n\nfunction initialSliderTasks(){\n  return [\n    {category:\"distance\", value:0},\n    {category:\"height\", value:0},\n    {category:\"frame\", value:0},\n\n  ]\n}\n\nfunction initialTasks(){\n  return [\n    {id: 1, name:\"Vertical-Up-To-Down\",category:\"attcktype\", pre:\"attcktype\", bgcolor: \"yellow\"},\n    {id: 2, name:\"Diagonal-UpLeft-To-LowRight\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"red\"},\n    {id: 3, name:\"Diagonal-UpRight-To-LowLeft\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"blue\"},\n    {id: 4, name:\"Diagonal-LowLeft-To-UpRight\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"green\"},\n    {id: 5, name:\"Diagonal-LowRight-To-UpLeft\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"purple\"},\n    {id: 6, name:\"Horizontal-Left-To-Right\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"cyan\"},\n    {id: 7, name:\"Horizontal-Right-To-Left\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"orange\"},\n    {id: 8, name:\"Thrust\", category:\"attcktype\", pre:\"attcktype\",bgcolor:\"pink\"},\n  ]\n}\n\nfunction initialMarked(){\n  return [];\n}\n\nfunction initialMotionState(){\n\n  return {\n    tasks: initialTasks(),\n\n    slider_tasks: initialSliderTasks(),\n\n    marked:initialMarked(),\n  }\n}\n\n\nexport default class AppDragDropDemo extends Component {\n\n  state = {\n\n    horizontal_factor: NaN,\n    vertical_factor: NaN,\n    frame_factor: NaN,\n    frame_min : NaN,\n\n    current: 'Sword_Attack_Ushort',\n    current_tasks: initialTasks(),\n    current_slider: initialSliderTasks(),\n    current_marked: initialMarked(),\n    // all motion dictionary\n    motion_dict: {\n      'Sword_Attack_Ushort': initialMotionState(),\n    },\n\n    // value:0.5\n  }\n\n\n\n  handleCheck = (e, i) => {\n    // alert(i);\n\n    if(i === this.state.current){\n      return;\n    }\n\n    // this.setState({current: i});\n    let new_item;\n    // if the item does not existed\n    if(!this.state.motion_dict.hasOwnProperty(i)){\n\n      new_item = { ...this.state.motion_dict,  [i]: initialMotionState() };\n\n      // after changed\n      this.setState({motion_dict: new_item}, function () {\n        // console.log(this.state);\n      });\n\n      // set current state\n\n    }else{\n      new_item = {...this.state.motion_dict};\n\n    }\n\n    this.setState({\n      current: i,\n      current_tasks: new_item[i].tasks,\n      current_slider: new_item[i].slider_tasks,\n      current_marked: new_item[i].marked\n\n    }, function () {\n      // console.log(this.state);\n    }\n\n    );\n\n  }\n\n  onClick = (e, name) => {\n    // this.state.current =\n\n    this.setState({current: name});\n\n  }\n\n  onChange = (e, category) => {\n    // get current slider value\n    let new_value = forceNumber(e.target.value);\n\n    // looping to find changed slider and change its value\n    let new_current_slider = this.state.current_slider.filter((slider_task) => {\n      // if find same category\n      if (slider_task.category === category){\n        slider_task.value = new_value;\n      }\n      return slider_task;\n    });\n\n    // save to current state\n    this.setState({current_slider: new_current_slider});\n\n    // save to preserved state\n    let new_item = { ...this.state.motion_dict,  [this.state.current]: {tasks: this.state.current_tasks, slider_tasks: new_current_slider, marked: this.state.current_marked} };\n    this.setState({motion_dict: new_item});\n\n  }\n\n  onDragStart = (ev, id, category, prev) => {\n    ev.dataTransfer.setData(\"id\", id);\n    ev.dataTransfer.setData(\"category\", category);\n    ev.dataTransfer.setData(\"prev\", prev);\n\n  }\n\n  onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n\n  onDrop = (ev, cat) => {\n\n    let id = ev.dataTransfer.getData(\"id\");\n    // let category = ev.dataTransfer.getData(\"category\");\n    let prev = ev.dataTransfer.getData(\"prev\");\n\n    let new_marked = this.state.current_marked;\n    let new_state = this.state.current_tasks.filter((task) => {\n\n\n      if (task.name === id) {\n\n        // if you do not plan to pu label in LABEL area, then it won't change anything\n        if(cat === \"label\") {\n          // if it is LABEL area\n\n          // if other tag has same category existed\n          let exist = this.state.current_marked.some(value => value === prev);\n\n          // stop if it has\n          if(exist===true){\n            return task;\n          // push this tag in if no\n          }else {\n            new_marked = [...new_marked, prev];\n          }\n\n          // change current category of tag\n          task.category = cat;\n\n        }else if (cat === prev){\n          // change current category of tag\n\n          task.category = cat;\n          new_marked = removePeople(new_marked, prev);\n\n        }\n      }\n\n      return task;\n    });\n\n    // save to current state\n    this.setState({\n          current_tasks: new_state,\n          current_marked: new_marked\n    });\n\n    // save to preserved state\n    let new_item = { ...this.state.motion_dict,  [this.state.current]: {tasks: this.state.current_tasks, slider_tasks: this.state.current_slider, marked: this.state.current_marked} };\n    this.setState({motion_dict:new_item});\n\n\n  }\n\n  render() {\n\n    // const items = [...Array(100)].map((val, i) => `Item ${i}`);\n    // console.log(items);\n\n    const data_array = readJSON();\n\n\n    let hmax = 0;\n    let vmax = 0;\n    let fmax = 0;\n    let fmin = Number.MAX_SAFE_INTEGER;\n\n    data_array.forEach((row)=>{\n\n      if (row.Horizontals[1] > hmax){\n        hmax = row.Horizontals[1];\n      }\n\n      if (row.Verticals[1] > vmax){\n        vmax = row.Verticals[1];\n      }\n\n      if (row.Frames[0] > fmax){\n        fmax = row.Frames[0];\n      }\n\n      if (row.Frames[0] < fmin){\n        fmin = row.Frames[0];\n      }\n\n    });\n\n\n\n\n\n\n\n    // console.log(data_array);\n\n    const responsive = {\n      desktop: {\n        breakpoint: { max: 3000, min: 1024 },\n        items: 3,\n        slidesToSlide: 3 // optional, default to 1.\n      },\n      tablet: {\n        breakpoint: { max: 1024, min: 464 },\n        items: 2,\n        slidesToSlide: 2 // optional, default to 1.\n      },\n      mobile: {\n        breakpoint: { max: 464, min: 0 },\n        items: 1,\n        slidesToSlide: 1 // optional, default to 1.\n      }\n    };\n\n\n    let tasks = {\n      video:[],\n      label:[],\n      attcktype: [],\n      distance:[],\n      height:[],\n      frame:[],\n      grids:[]\n    }\n\n    this.state.current_tasks.forEach ((t) => {\n      tasks[t.category].push(\n          <div id = {t.id} key={t.name}\n               onDragStart = {(e) => this.onDragStart(e, t.name, t.category, t.pre)}\n               draggable\n               className=\"draggable\"\n               style = {{backgroundColor: t.bgcolor}}\n          >\n            {t.name}\n          </div>\n      );\n    });\n\n\n\n    // the local min max when filter applies\n    let h_limit_max = 1;\n    let h_limit_min = 0;\n\n    let v_limit_max = 1;\n    let v_limit_min = 0;\n\n    let f_limit_max = 1;\n    let f_limit_min = 0;\n\n\n    if (tasks.label.length !== 0){\n\n      let lhmax = 0;\n      let lhmin = Number.MAX_SAFE_INTEGER;\n\n      let lvmax = 0;\n      let lvmin = Number.MAX_SAFE_INTEGER;\n\n      let lfmax = 0;\n      let lfmin = Number.MAX_SAFE_INTEGER;\n\n      data_array.forEach((row)=>{\n        if (row.Attacks.some(item => item === tasks.label[0].props.id)){\n\n          if (row.Horizontals[1] > lhmax){\n            lhmax = row.Horizontals[1];\n          }\n\n          if (row.Horizontals[1] < lhmin){\n            lhmin = row.Horizontals[1];\n          }\n\n          if (row.Verticals[1] > lvmax){\n            lvmax = row.Verticals[1];\n          }\n\n          if (row.Verticals[1] < lvmin){\n            lvmin = row.Verticals[1];\n          }\n\n          if (row.Frames[0] > lfmax){\n            lfmax = row.Frames[0];\n          }\n\n          if (row.Frames[0] < lfmin){\n            lfmin = row.Frames[0];\n          }\n        }\n      });\n\n      h_limit_max = (lhmax) / (hmax);\n      h_limit_min = (lhmin) / (hmax);\n\n      v_limit_max = (lvmax) / (vmax);\n      v_limit_min = (lvmin) / (vmax);\n\n      f_limit_max = (lfmax - fmin) / (fmax - fmin);\n      f_limit_min = (lfmin - fmin) / (fmax - fmin);\n\n    }\n\n\n    const limits = {\n      distance: { enabled: true, minStart: h_limit_min, minEnd: h_limit_max },\n      height: { enabled: true, minStart: v_limit_min, minEnd: v_limit_max },\n      frame: { enabled: true, minStart: f_limit_min, minEnd: f_limit_max },\n\n    }\n\n\n    this.state.current_slider.forEach ((t) => {\n      tasks[t.category].push(\n          <div>\n            <RangeStepInput min = {0} max = {1} value={t.value} step={0.01} onChange={(e)=>{this.onChange(e, t.category)}} hold={true}/>\n            {/*<SliderComponent value={this.value} type='MinRange' min={0} max={1} limits={limits[t.category]}*/}\n            {/*                 tooltip={true} />*/}\n            {t.value}\n          </div>\n      );\n    });\n\n    // console.log(tasks);\n    console.log(tasks);\n    // console.log(tasks.label.length > 0);\n\n    data_array.forEach((row)=>{\n      // console.log(row); <img className=\"Header-logo\" src={\"/Gifs/\"+ row.Name +\"_0.gif\"} alt={row.Name} width=\"300\" height=\"200\" />\n\n      let normalized_h = (row.Horizontals[1] - 0) / (hmax);\n      let normalized_v = (row.Verticals[1] - 0) / (vmax);\n      let normalized_f = (row.Frames[0] - fmin) / (fmax - fmin);\n\n      // console.log(normalized_h + \", \" + normalized_v + \", \" + normalized_f);\n      // console.log(tasks.distance[0].props.value + \", \" + tasks.height[0].props.value + \", \" + tasks.frame[0].props.value);\n\n      // check if current label area is empty\n      if (tasks.label.length === 0){\n\n        // if(tasks.distance[0].props.children[0].props.value <= normalized_h\n        //     && tasks.height[0].props.children[0].props.value <= normalized_v\n        //     && tasks.frame[0].props.children[0].props.value <= normalized_f){\n        //\n        //\n        //\n        // }\n\n        tasks['grids'].push(\n            <button\n                className=\"motionButton\"\n                name = {row.Name}\n                hscore = {normalized_h}\n                vscore = {normalized_v}\n                fscore = {normalized_f}\n                tscore = {normalized_h + normalized_v + normalized_f}\n\n                onClick= {(e) => this.onClick(e, row.Name)}\n            >{row.Name}</button>\n        );\n\n      }else {\n\n        if (row.Attacks.some(item => item === tasks.label[0].props.id)) {\n\n          // if(tasks.distance[0].props.children[0].props.value <= normalized_h\n          //     && tasks.height[0].props.children[0].props.value <= normalized_v\n          //     && tasks.frame[0].props.children[0].props.value <= normalized_f){\n          //\n          //\n          //\n          // }\n          tasks['grids'].push(\n              <button\n                  className=\"motionButton\"\n                  name = {row.Name}\n                  hscore = {normalized_h}\n                  vscore = {normalized_v}\n                  fscore = {normalized_f}\n                  tscore = {normalized_h + normalized_v + normalized_f}\n\n                  onClick= {(e) => this.onClick(e, row.Name)}\n              >{row.Name}</button>\n          );\n\n        }\n      }\n\n    });\n\n    let distance_input = this.state.current_slider[0].value;\n    let height_input = this.state.current_slider[1].value;\n    let frame_input = this.state.current_slider[2].value;\n\n\n    tasks['grids']\n        .sort((a, b) =>\n            Math.abs(a.props.hscore - height_input) + Math.abs(a.props.vscore -  distance_input) + Math.abs(a.props.fscore - frame_input)\n        >\n            Math.abs(b.props.hscore - height_input) + Math.abs(b.props.vscore -  distance_input) + Math.abs(b.props.fscore - frame_input)\n        ?\n            1 : -1)\n\n        .map((item, i) =>\n            <button\n                className=\"motionButton\"\n                name = {item.props.name}\n                hscore = {item.props.hscore}\n                vscore = {item.props.vscore}\n                fscore = {item.props.fscore}\n                tscore = {item.props.tscore}\n\n                onClick= {(e) => this.onClick(e, item.props.name)}\n            >{item.props.name}</button>\n        );\n\n    // tasks.grids = est;\n\n    // const images = importAll(require.context('./public/Gifs/', false, /\\.gif/));\n\n    // console.log(images)\n\n    return (\n        <div className=\"container-drag\">\n          <h2 className=\"header\">DRAG & DROP DEMO</h2>\n\n          <div className=\"video\">\n            <span className=\"task-header\">Video</span>\n            <Video url = {this.state.current}/>\n          </div>\n\n          <Carousel\n              swipeable={true}\n              draggable={true}\n              showDots={true}\n              responsive={responsive}\n              ssr={true} // means to render carousel on server-side.\n              infinite={true}\n              autoPlay={false}\n              autoPlaySpeed={1000}\n              keyBoardControl={true}\n              customTransition=\"all .5\"\n              transitionDuration={500}\n              containerClass=\"carousel-container-with_scrollbar\"\n              removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n              deviceType=\"desktop\"\n              dotListClass=\"custom-dot-list-style\"\n              // itemClass=\"carousel-item-padding-40-px\"\n              itemClass=\"slider-image-item-padding-10-px\"\n          >\n\n            {tasks.grids}\n          </Carousel>\n\n\n\n          <div className=\"label\"\n               onDragOver={(e)=>this.onDragOver(e)}\n               onDrop={(e)=>{this.onDrop(e, \"label\")}}>\n            <span className=\"task-header\">Filter Area</span>\n            {tasks.label}\n          </div>\n\n          <div className=\"attcktype\"\n               onDragOver={(e)=>this.onDragOver(e)}\n               onDrop={(e)=>{this.onDrop(e, \"attcktype\")}}>\n            <span className=\"task-header\">Attack Type</span>\n            {tasks.attcktype}\n          </div>\n\n\n          <div className=\"distance\" >\n            <span className=\"task-header\">Distance</span>\n            {tasks.distance}\n          </div>\n\n          <div className=\"height\" >\n            <span className=\"task-header\">Height</span>\n            {tasks.height}\n          </div>\n\n          <div className=\"frame\" >\n            <span className=\"task-header\">Frame</span>\n            {tasks.frame}\n          </div>\n\n        </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}